import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';
import {FormsModule} from '@angular/forms'
import {AppRoutingModule} from './app-routing.module'
import {RouterModule} from '@angular/router';
import { AppComponent } from './app.component';
import { HelloComponent } from './hello/hello.component';
import {HttpClientModule} from '@angular/common/http'
import {RecordService} from './record.service';
import { HomeComponent } from './home/home.component';
import { DataComponent } from './data/data.component';
import { LoginComponent } from './login/login.component';
import { AdminComponent } from './admin/admin.component'
import {AuthGuard} from './auth.guard'
import { UserService} from './user.service'
import { LogoutComponent } from './logout/logout.component';


// // custom decorator
// function log(target, name, descriptor){
//   //console.log(target, name, descriptor)
//   //store the original function in a variable
//   const original = descriptor.value
//   //do some manipulation with descriptor.value
//   //original()
//   // descriptor.value = function(){
//   //   console.log("This function is hacked") 
//   // }
//   //return the descriptor

//   descriptor.value = function(...args){
//     console.log("Arguments ", args, " were passed in this section")
//     const result = original.apply(this,args)
//     console.log("The result of the function is", result)
//     return result
//   }
//   return descriptor
// }

// function log(className){
//   console.log(className)
//   return (...args) => {
//     console.log("Arguments passed to this constructor are ",args)
//     return new className(...args) //return the initialization of the class itself
//   }
// }


// @log
// class myExampleClass {
//   constructor(arg1, arg2) {
//     console.log("Constructor fired!")
//   }
// }

// const myClass  = new myExampleClass(5, 10)


@NgModule({
  declarations: [
    AppComponent,
    HelloComponent,
    HomeComponent,
    DataComponent,
    LoginComponent,
    AdminComponent,
    LogoutComponent
  ],
  imports: [
    BrowserModule,
    FormsModule,
    HttpClientModule,
    RouterModule.forRoot([
      {
        path: 'login',
        component: LoginComponent
      },
      {
        path: 'admin',
        component: AdminComponent,
        canActivate: [AuthGuard]
      },
      {
        path: 'logout',
        component: LogoutComponent
      },
      {
        path: '',
        component: HomeComponent
      }
    ])
  ],
  providers: [RecordService, UserService, AuthGuard],
  bootstrap: [AppComponent]
})

export class AppModule { 

  // constructor(){
  //   console.log("This statement was generated by the constractor", this.asimpleMethod(5, 2))
  // }

  // //           remove decorator   //member decorator
  // asimpleMethod(a, b){
  //   return a*b
  // }
}


